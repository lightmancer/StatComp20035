"0","# Count Five test"
"0","count5test = function(x, y) {"
"0","X = x - mean(x)"
"0","Y = y - mean(y)"
"0","outx = sum(X > max(Y)) + sum(X < min(Y))"
"0","outy = sum(Y > max(X)) + sum(Y < min(X))"
"0","# return 1 (reject) or 0 (do not reject H0)"
"0","return(as.integer(max(c(outx, outy)) > 5))"
"0","}"
"0","# Count Five test permutation"
"0","count5test_permutation = function(z) "
"0","{"
"0","n = length(z)"
"0","x = z[1:(n/2)]"
"0","y = z[-(1:(n/2))]"
"0","X = x - mean(x)"
"0","Y = y - mean(y)"
"0","outx = sum(X > max(Y)) + sum(X < min(Y)) "
"0","outy = sum(Y > max(X)) + sum(Y < min(X))"
"0","return(as.integer(max(c(outx, outy)) > 5))"
"0","}"
"0","permutation = function(z,R) "
"0","{"
"0","  n = length(z)"
"0","  out = numeric(R)"
"0","  for (r in 1: R)"
"0","  {"
"0","      p = sample(1:n ,n ,replace = FALSE)"
"0","      out[r] = count5test_permutation(z[p])"
"0","  }"
"0","  sum(out)/R"
"0","}              "
"0",""
"0",""
"0","n1 = 20"
"0","n2 = 50"
"0","mu1 = mu2 = 0"
"0","sigma1 = sigma2 = 1"
"0","m = 1e3"
"0",""
"0","alphahat1 = mean(replicate(m, expr={"
"0","x = rnorm(n1, mu1, sigma1)"
"0","y = rnorm(n2, mu2, sigma2)"
"0","x = x - mean(x) #centered by sample mean"
"0","y = y - mean(y)"
"0","count5test(x, y)"
"0","}))"
"0","alphahat2 = mean(replicate(m, expr={"
"0","x = rnorm(n1, mu1, sigma1)"
"0","y = rnorm(n2, mu2, sigma2)"
"0","x = x - mean(x) #centered by sample mean "
"0","y = y - mean(y)"
"0","z = c(x,y)"
"0","permutation(z,1000) "
"0","})<0.05)"
"0",""
"0","round(c(count5test=alphahat1,count5test_permutation=alphahat2),4)"
"1","            count5test "
"1","count5test_permutation "
"1","
"
"1","                 0.292 "
"1","                 0.042 "
"1","
"
